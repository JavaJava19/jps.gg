# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["release"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./website
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  # Deployment to GitHub Pages
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        
  # Deployment to jps.gg orign
  commitDeploymentSource:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: DL artifact
        id: download
        uses: actions/download-artifact@v3
        with:
          name: github-pages
          path: _site

      - uses: actions/checkout@v3
      - name: git setting
        run: |
          git config --local user.email "jekyll-gh-pages.yml@workflow.javajava19.github.io"
          git config --local user.name "GitHub Action"
      - name: Get github token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.SECRET }}
      - name: add
        id: add
        shell: bash
        run: |
          tar xvf artifact.tar
          cd ${{steps.download.outputs.download-path}}/./
          ls -R -l -h
          
          git add $(find)
          files=$(find)
          echo "-------"
          echo -e files

          for ((i=0; i<${#files[@]}; i++)); do
            if [ $i -eq 0 ]
            then
              filePath=${files[0]}
            else
              filePath="${filePath}\n${files[i]}"
            fi
          done
          echo -e "filePath="${filePath}
          echo -e "file="${filePath} >> $GITHUB_OUTPUT
      - name: commit
        id: commit
        uses: yui-Kitamura/commit@2.0.1
        with:
          files: |
            echo -e ${{steps.add.outputs.file}}
          commit-message: build jar file by GitHubAction(jekyll-gh-pages.yml) [skip ci]
          ref: refs/heads/${{steps.add.outputs.tgtBranch}}
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
  # FTP job
  transferWithFTP:
    runs-on: ubuntu-latest
    needs: commitDeploymentSource
    steps:
      - name: Sync files FTP
        id: ftp_sync
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: jps.gg
          username: ${{ secrets.ftp_user }}
          password: ${{ secrets.ftp_password }}
          local-dir: ./_site/
